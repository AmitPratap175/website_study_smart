{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/contexts/ThemeContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext(undefined);\nexport const useTheme = () => {\n  _s();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within ThemeProvider');\n  }\n  return context;\n};\n_s(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [isDark, setIsDark] = useState(() => {\n    const saved = localStorage.getItem('theme');\n    return saved === 'dark' || !saved && window.matchMedia('(prefers-color-scheme: dark)').matches;\n  });\n  useEffect(() => {\n    const root = document.documentElement;\n    if (isDark) {\n      root.classList.add('dark');\n      root.classList.remove('light');\n      localStorage.setItem('theme', 'dark');\n    } else {\n      root.classList.remove('dark');\n      root.classList.add('light');\n      localStorage.setItem('theme', 'light');\n    }\n  }, [isDark]);\n  const toggleTheme = () => setIsDark(!isDark);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      isDark,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"F/a2DP8odBy1dpORMNdGRkg17kI=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","ThemeContext","undefined","useTheme","_s","context","Error","ThemeProvider","children","_s2","isDark","setIsDark","saved","localStorage","getItem","window","matchMedia","matches","root","document","documentElement","classList","add","remove","setItem","toggleTheme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/frontend/src/contexts/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\n\ninterface ThemeContextType {\n  isDark: boolean;\n  toggleTheme: () => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within ThemeProvider');\n  }\n  return context;\n};\n\nexport const ThemeProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const saved = localStorage.getItem('theme');\n    return saved === 'dark' || (!saved && window.matchMedia('(prefers-color-scheme: dark)').matches);\n  });\n\n  useEffect(() => {\n    const root = document.documentElement;\n    if (isDark) {\n      root.classList.add('dark');\n      root.classList.remove('light');\n      localStorage.setItem('theme', 'dark');\n    } else {\n      root.classList.remove('dark');\n      root.classList.add('light');\n      localStorage.setItem('theme', 'light');\n    }\n  }, [isDark]);\n\n  const toggleTheme = () => setIsDark(!isDark);\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO9E,MAAMC,YAAY,gBAAGN,aAAa,CAA+BO,SAAS,CAAC;AAE3E,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,OAAO,GAAGT,UAAU,CAACK,YAAY,CAAC;EACxC,IAAI,CAACI,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,QAAQ;AAQrB,OAAO,MAAMI,aAAsD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACtF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,MAAM;IACzC,MAAMc,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,OAAOF,KAAK,KAAK,MAAM,IAAK,CAACA,KAAK,IAAIG,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAQ;EAClG,CAAC,CAAC;EAEFpB,SAAS,CAAC,MAAM;IACd,MAAMqB,IAAI,GAAGC,QAAQ,CAACC,eAAe;IACrC,IAAIV,MAAM,EAAE;MACVQ,IAAI,CAACG,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;MAC1BJ,IAAI,CAACG,SAAS,CAACE,MAAM,CAAC,OAAO,CAAC;MAC9BV,YAAY,CAACW,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC;IACvC,CAAC,MAAM;MACLN,IAAI,CAACG,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;MAC7BL,IAAI,CAACG,SAAS,CAACC,GAAG,CAAC,OAAO,CAAC;MAC3BT,YAAY,CAACW,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC;IACxC;EACF,CAAC,EAAE,CAACd,MAAM,CAAC,CAAC;EAEZ,MAAMe,WAAW,GAAGA,CAAA,KAAMd,SAAS,CAAC,CAACD,MAAM,CAAC;EAE5C,oBACEV,OAAA,CAACC,YAAY,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,MAAM;MAAEe;IAAY,CAAE;IAAAjB,QAAA,EACnDA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACtB,GAAA,CA1BWF,aAAsD;AAAAyB,EAAA,GAAtDzB,aAAsD;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}